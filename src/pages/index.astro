---
import { renderPicture } from "astro-imagetools/api";

import { submissionFormUrl } from "../config.mjs";

import Head from "../components/Head.astro";
import Loader from "../components/Loader.astro";
import Filter from "../components/Filter.astro";
import Icon from "../components/Icon.astro";
import { memes } from "../dataset.mjs";

import "@fontsource/jost/300.css";
import suchoLogo32x32 from "../img/sucho-logo.32x32.png";
import suchoLogo64x64 from "../img/sucho-logo.64x64.png";

// Given a <picture/> element as am HTML string (as returned by renderPicture),
// extract the srcset attribute values and return an object of the form
// { <ext>: <srcset>, ... }
const getSrcsetFromPicture = (picture) =>
  Object.fromEntries(
    [...picture.matchAll(/srcset="(?<s>[^"]*?)"/g)].map((s) => [
      s[1].match(/(?<=\.)[^\s.]+(?=\s|$)/)[0],
      s.groups.s,
    ]),
  );

const title = "SUCHO Meme Wall";
const description =
  "Collected memes from the SUCHO project concerning the Russian invasion of Ukraine.";
---

<html lang="en">
  <Head {title} {description} />
  <body>
    <header>
      <h1>
        <img srcset={`${suchoLogo64x64} 2x`} src={suchoLogo32x32} alt="SUCHO" />
        <a href={Astro.site.pathname} title="SUCHO Meme Wall"
          >SUCHO Meme Wall
        </a>
      </h1>
      <div class="controls">
        <span class="count">{memes.length} / {memes.length}</span>
        <Filter
          title="Filter Memes"
          selectClass="memeType"
          placeHolder="-- Filter by Content --"
          facet="memeTypes"
        />
        <div class="search">
          <button class="search" title="Search Memes"
            ><Icon name="search" />
          </button>
          <input id="search-input" type="text" />
          <label for="search-input" class="visually-hidden">Search Term</label>
        </div>
        <button class="show-filters" title="Show Filters"
          ><Icon name="filter" />
        </button>
        <button class="shuffle" title="Shuffle Memes"
          ><Icon name="shuffle" />
        </button>
        <a class="button" title="Submit a Meme" href={submissionFormUrl}>
          <Icon name="upload" />
        </a>
        <a class="button" title="About" href="/about/">
          <Icon name="info-circle" />
        </a>
      </div>
      <div class="more-filters">
        <Filter
          title="Filter by Person"
          selectClass="person"
          placeHolder="-- Person --"
          facet="people"
        />
        <Filter
          title="Filter by Language"
          selectClass="language"
          placeHolder="-- Language --"
          facet="languages"
        />
        <Filter
          title="Filter by Country"
          selectClass="country"
          placeHolder="-- Country --"
          facet="countries"
        />
        <Filter
          title="Filter by Template Type"
          selectClass="templateType"
          placeHolder="-- Template Type --"
          facet="templateTypes"
        />
      </div>
      <a href="#" class="share overlay-button" aria-label="Share">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          stroke-width="1"
          stroke="currentColor"
          fill="none"
        >
          <circle cx="6" cy="12" r="3"></circle>
          <circle cx="18" cy="6" r="3"></circle>
          <circle cx="18" cy="18" r="3"></circle>
          <line x1="8.7" y1="10.7" x2="15.3" y2="7.3"></line>
          <line x1="8.7" y1="13.3" x2="15.3" y2="16.7"></line>
        </svg>
      </a>
    </header>
    <main id="meme-wall" class="loading">
      {
        memes.map(async (meme, idx) => {
          const { picture } = await renderPicture({
            src: "/src/../meme_media/" + meme.filename,
            fallbackFormat: "jpeg",
            format: "webp",
            alt: meme.title,
            placeholder: "none",
            includeSourceFormat: false,
          });
          const srcsets = getSrcsetFromPicture(picture);

          return (
            <picture
              data-id={meme.driveId}
              data-meme-type={meme.memeTypes.join("|")}
              data-person={meme.people.join("|")}
              data-language={meme.languages.join("|")}
              data-country={meme.countries.join("|")}
              data-template-type={meme.templateTypes.join("|")}
            >
              <source srcset={srcsets.webp} type="image/webp" sizes="15vmax" />
              <img
                data-src={srcsets.jpg}
                style={`aspect-ratio: ${meme.aspectRatio};background-image: url(${meme.thumbnail})`}
                loading={idx > 20 ? "lazy" : "eager"}
                decoding="async"
                alt={meme.title}
                sizes="15vmax"
              />
              <dl>
                <dt>Title</dt>
                <dd>{meme.title || "---"}</dd>
                <dt>Translation</dt>
                <dd>{meme.textTranslatedIntoEnglish || "---"}</dd>
                <dt>Content Type</dt>
                <dd>{meme.memeContentType || "---"}</dd>
                <dt>Country</dt>
                <dd>{meme.country || "---"}</dd>
                <dt>Language</dt>
                <dd>{meme.language || "---"}</dd>
                <dt>Template Type</dt>
                <dd>{meme.memeTemplateType || "---"}</dd>
                <dt>People</dt>
                <dd>{meme.peopleIndividuals || "---"}</dd>
              </dl>
            </picture>
          );
        })
      }
    </main>
    <Loader />
    <script type="module" hoist>
      import "../js/script.js";
    </script>
  </body>
</html>
<style is:global>
  @import "../styles/shared.css";
  @import "../styles/wall.css";
</style>
