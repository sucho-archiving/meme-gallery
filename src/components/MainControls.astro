---
import { submissionFormUrl } from "../config.mjs";
import { memes } from "../dataset.mjs";

import Icon from "../components/Icon.astro";
import Filter from "../components/Filter.astro";
---

<div class="controls">
  <div class="count">
    <span>{memes.length} / {memes.length}</span>
    <button class="reset-wall" title="Reset Wall"><Icon name="reset" /></button>
  </div>
  <Filter
    title="Filter Memes"
    selectId="memeType"
    placeHolder="-- Filter by Content --"
    facet="memeTypes"
    containerClass="filter"
  />
  <div class="search">
    <button class="search" title="Search Memes"><Icon name="search" /></button>
    <input id="search-input" type="text" />
    <label for="search-input" class="visually-hidden">Search Term</label>
  </div>
  <button class="show-filters" title="Show Filters"
    ><Icon name="filter" />
  </button>
  <a class="button" title="Submit a Meme" href={submissionFormUrl}>
    <Icon name="upload" />
  </a>
  <a class="button" title="About" href="/about/">
    <Icon name="info-circle" />
  </a>
</div>

<style>
  svg {
    display: inline-block;
    fill: transparent;
    height: 1.5rem;
    stroke: white;
    vertical-align: middle;
    width: 1.5rem;
  }

  button,
  a {
    color: white;
    padding: 0 4px;
  }

  .controls {
    display: grid;
    grid-template-columns: auto 1fr repeat(4, 32px);
    gap: 0.5em;
    justify-content: center;
    position: relative;

    .count {
      background: #555;
      border-radius: 4px;
      display: flex;
      padding: 7px 8px 5px;
      align-items: center;
      white-space: nowrap;

      button {
        padding: 0;
        margin-left: 0;
        overflow: hidden;
        transition: padding 200ms ease, margin-left 200ms ease, width 200ms ease;
        width: 0;

        &:hover {
          background-color: var(--primary-accent);
        }
      }

      &.show-reset button {
        padding: 1px;
        margin-left: 4px;
        width: calc(1.2rem + 2px);
      }

      :global(svg) {
        height: 1.2rem;
        width: 1.2rem;
      }
    }

    :global(.filter) {
      min-width: 0; /* prevents div from overflowing designated grid area */
    }

    div.search {
      display: flex;
      max-width: 20em;
      transition: flex 200ms ease-in-out;

      button {
        height: 100%;
      }

      input {
        appearance: none;
        background-color: transparent;
        border: none;
        color: white;
        flex: 1 1 auto;
        font-family: inherit;
        font-size: 1rem;
        margin-bottom: -2px;
        outline-offset: -1px;
        outline: 1px solid #555;
        padding: 0;
        width: 0;
      }
    }
  }

  button.show-filters {
    &.on {
      background-color: #555;
    }

    &::after {
      background-color: var(--primary-accent);
      border-radius: 3px;
      color: white;
      content: "0";
      display: inline-block;
      opacity: 0;
      padding: 2px 4px;
      position: absolute;
      top: 0;
      transition: opacity 200ms ease-in-out;
    }

    &.show-indicator::after {
      content: attr(data-active-filter-count);
      opacity: 1;
    }
  }

  @media (min-width: 1100px) {
    div.controls {
    }
  }

  @media (max-width: 1149px) {
    div.controls {
      transition: padding-bottom 200ms ease;

      &.searching {
        padding-bottom: calc(40px + 0.5em);

        div.search {
          button {
            background-color: #555;
          }

          input {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' fill='transparent' stroke='%23555'%3E%3Ccircle cx='10' cy='10' r='7'%3E%3C/circle%3E%3Cline x1='21' y1='21' x2='15' y2='15'%3E%3C/line%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-size: 1.5rem;
            background-position: 10px center;
            border-radius: 4px;
            padding: 10px 10px 10px 40px;
            position: absolute;
            width: 100%;
            left: 0;
            bottom: 2px;
            height: 40px;
            line-height: 1em;
          }
        }
      }
    }
  }

  @media (min-width: 1150px) {
    div.controls {
      gap: 1em;
      justify-content: flex-end;

      &.searching {
        div.search {
          flex-grow: 1;

          button {
            background-color: #555;
            border-radius: 4px 0 0 4px;
          }

          input {
            border-radius: 0 4px 4px 0;
            display: inline;
            margin-bottom: 0;
            padding: 0 10px;
          }
        }
      }
    }
  }
</style>
