---
import CheckboxMultiSelect from "../components/CheckboxMultiSelect.svelte";

import * as datasetObj from "../dataset.mjs";

const { title, selectId, placeHolder, containerClass, facet } = Astro.props;
const memes = datasetObj["memes"];
const facetValues = datasetObj[facet];
let options;

const makeLabels = ({ value, count }) => ({
  value,
  label: `${value} [${count}]`,
});

if (facetValues[0].group) {
  // group options and add counts
  // nb. this is not an efficient way to do this, but it runs at build time
  options = facetValues.reduce((hash, obj) => {
    const options = (hash[obj.group]?.options || []).concat(makeLabels(obj));
    const count = memes.filter(({ memeTypes }) =>
      memeTypes.some((mt) => options.map((o) => o.value).includes(mt)),
    ).length;
    return {
      ...hash,
      [obj.group]: { options, count },
    };
  }, {});
} else {
  options = facetValues.map(makeLabels);
}
---

<CheckboxMultiSelect
  {options}
  {selectId}
  {containerClass}
  {title}
  {placeHolder}
  client:idle
/>
