---
import * as datasetObj from "../dataset.mjs";

const { facet, description } = Astro.props;
const { memes } = datasetObj;
const facetValues = datasetObj[facet];

const maxCount = Math.max(
  ...Array.from(facetValues).map(
    (facetValue) =>
      memes.filter((meme) => meme[facet].includes(facetValue)).length,
  ),
);
---

<table
  id={facet}
  onclick="this.classList.toggle('charts-css');"
  class="bar hide-data data-spacing-2 show-heading"
>
  <caption>{description}</caption>
  <thead>
    <tr><th scope="col">Value</th><th scope="col">Count</th></tr>
  </thead>
  <tbody>
    {
      Array.from(facetValues)
        .map((facetValue) => ({
          value: facetValue,
          count: memes.filter((meme) => meme[facet].includes(facetValue))
            .length,
        }))
        .sort((a, b) => b.count - a.count || a.value.localeCompare(b.value))
        .map((option) => (
          <tr>
            <th scope="row">{option.value}</th>
            <td style={`--size: ${option.count / maxCount}`}>
              <span class="data">{option.count}</span>
            </td>
          </tr>
        ))
    }
  </tbody>
</table>

<style>
  table {
    border-collapse: collapse;
    flex-grow: 1;
    min-width: 25%;
    scroll-margin-top: 2em;
    --color: linear-gradient(transparent, cadetblue 5%, transparent);
  }

  caption {
    font-size: 1.4em;
    font-variant: petite-caps;
    overflow: hidden;

    &:before,
    &:after {
      background-color: #777;
      content: "";
      display: inline-block;
      height: 1px;
      position: relative;
      vertical-align: middle;
      width: 50%;
    }

    &:before {
      margin-left: -50%;
      right: 0.75em;
    }

    &:after {
      left: 0.75em;
      margin-right: -50%;
    }
  }

  th[scope="col"] {
    font-variant-caps: all-petite-caps;
  }

  th[scope="row"] {
    font-weight: 200;
  }

  :is(td, th):first-child {
    padding-left: 1em;
    text-align: left;
    text-indent: -1em;
  }

  :is(td, th):nth-child(2) {
    text-align: right;
  }

  tbody td,
  tbody th {
    border-bottom: 1px solid #444;
    padding: 0 0.5em;

    border-radius: 0 6px 6px 0;
    padding-left: 8px;
  }

  tbody tr:hover {
    background-color: #666;
  }
</style>
